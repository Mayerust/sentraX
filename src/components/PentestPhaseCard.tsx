import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { CheckCircle, Clock, Play } from 'lucide-react';

interface PentestPhase {
  id: string;
  name: string;
  icon: React.ElementType;
  description: string;
  color: string;
}

interface PentestPhaseCardProps {
  phase: PentestPhase;
  isActive: boolean;
  isCompleted: boolean;
  onExecute: () => void;
}

export const PentestPhaseCard: React.FC<PentestPhaseCardProps> = ({
  phase,
  isActive,
  isCompleted,
  onExecute
}) => {
  const Icon = phase.icon;

  return (
    <Card 
      className={`transition-all duration-300 ${
        isActive 
          ? 'border-cyber-green shadow-glow-cyber animate-glow-pulse' 
          : isCompleted 
            ? 'border-cyber-green/50 bg-cyber-green/5' 
            : 'hover:border-muted-foreground/50'
      }`}
    >
      <CardHeader className="pb-3">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className={`p-2 rounded-lg ${
              isActive 
                ? 'bg-cyber-green text-background animate-glow-pulse' 
                : isCompleted 
                  ? 'bg-cyber-green/20 text-cyber-green' 
                  : 'bg-muted text-muted-foreground'
            }`}>
              {isCompleted ? (
                <CheckCircle className="w-5 h-5" />
              ) : isActive ? (
                <Icon className="w-5 h-5 animate-cyber-rotate" />
              ) : (
                <Icon className="w-5 h-5" />
              )}
            </div>
            <CardTitle className="text-lg">{phase.name}</CardTitle>
          </div>
          
          {isActive && (
            <Badge variant="outline" className="animate-glow-pulse text-cyber-green border-cyber-green/50">
              <Clock className="w-3 h-3 mr-1" />
              Running
            </Badge>
          )}
          
          {isCompleted && (
            <Badge variant="outline" className="text-cyber-green border-cyber-green/50">
              <CheckCircle className="w-3 h-3 mr-1" />
              Complete
            </Badge>
          )}
        </div>
      </CardHeader>
      
      <CardContent className="space-y-4">
        <p className="text-sm text-muted-foreground">
          {phase.description}
        </p>
        
        {!isActive && !isCompleted && (
          <Button 
            variant="cyber" 
            size="sm" 
            onClick={onExecute}
            className="w-full"
          >
            <Play className="w-4 h-4 mr-2" />
            Execute Phase
          </Button>
        )}
        
        {isActive && (
          <div className="flex items-center gap-2 text-sm text-cyber-green">
            <div className="w-2 h-2 bg-cyber-green rounded-full animate-glow-pulse" />
            Executing...
          </div>
        )}
      </CardContent>
    </Card>
  );
};